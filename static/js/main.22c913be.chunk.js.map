{"version":3,"sources":["examples/ThreePanels/ThreePanels.module.css","examples/ThreePanels/ThreePanels.js","examples/Basic/Basic.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AnimatedPanel","ReactOffcanvasComponent","CloseButton","DropdownMenu","Menu","MenuItem","Item","ThreePanels","useState","visibility","setVisibility","handleClick","className","onClick","overlay","open","onClose","classNames","wrapper","panelMid","panelTop","style","color","textAlign","menu","hasDropdown","name","dropdownIconClassName","dropdownIcon","dropdown","settingsPanel","Basic","openAnimation","x","transition","duration","right","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22c913be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ThreePanels_wrapper__yYyVS\",\"panelMid\":\"ThreePanels_panelMid__1g6CT\",\"panelTop\":\"ThreePanels_panelTop__PIMYR\",\"menu\":\"ThreePanels_menu__unNtt\",\"settingsPanel\":\"ThreePanels_settingsPanel__1Sdrs\",\"dropdown\":\"ThreePanels_dropdown__3hE_M\",\"dropdownIcon\":\"ThreePanels_dropdownIcon__20zXN\"};","import React, { useState } from \"react\";\nimport ReactOffcanvasComponent from \"react-offcanvas-component\";\nimport classNames from \"./ThreePanels.module.css\";\nimport {\n  FaCog,\n  FaEnvelope,\n  FaCommentAlt,\n  FaMagic,\n  FaUserAstronaut,\n  FaHome,\n  FaIntercom,\n  FaBaby,\n  FaShareAlt\n} from \"react-icons/fa\";\nconst {\n  AnimatedPanel,\n  CloseButton,\n  DropdownMenu,\n  Menu\n} = ReactOffcanvasComponent;\n\nconst MenuItem = Menu.Item;\n\nfunction ThreePanels() {\n  const [visibility, setVisibility] = useState(false);\n\n  const handleClick = () => {\n    setVisibility(visibility => !visibility);\n  };\n  return (\n    <div>\n      <button className=\"button\" onClick={handleClick}>\n        Three Panels\n      </button>\n      <ReactOffcanvasComponent\n        overlay\n        open={visibility}\n        onClose={handleClick}\n        className={classNames.wrapper}\n      >\n        <AnimatedPanel className={classNames.panelMid}>\n          <AnimatedPanel className={classNames.panelTop}>\n            <CloseButton onClick={handleClick} style={{ color: \"#fff\" }}>\n              x\n            </CloseButton>\n            <h1 style={{ color: \"#fff\", textAlign: \"center\" }}>ROC</h1>\n            <Menu className={classNames.menu}>\n              <MenuItem>\n                <FaUserAstronaut /> Astro\n              </MenuItem>\n              <MenuItem>\n                <FaHome /> Home\n              </MenuItem>\n              <MenuItem>\n                <FaCog /> Settings\n              </MenuItem>\n              <MenuItem\n                hasDropdown\n                name=\"dropdown-b\"\n                dropdownIconClassName={classNames.dropdownIcon}\n              >\n                <FaIntercom /> Dropdown\n                <DropdownMenu className={classNames.dropdown}>\n                  <MenuItem>Abc</MenuItem>\n                  <MenuItem>Abc</MenuItem>\n                  <MenuItem>Abc</MenuItem>\n                </DropdownMenu>\n              </MenuItem>\n              <MenuItem>\n                <FaBaby /> Baby{\" \"}\n              </MenuItem>\n              <MenuItem\n                hasDropdown\n                name=\"dropdown-a\"\n                dropdownIconClassName={classNames.dropdownIcon}\n              >\n                <FaShareAlt /> Dropdown\n                <DropdownMenu className={classNames.dropdown}>\n                  <MenuItem>Abc</MenuItem>\n                  <MenuItem>Abc</MenuItem>\n                  <MenuItem>Abc</MenuItem>\n                </DropdownMenu>\n              </MenuItem>\n            </Menu>\n            <div className={classNames.settingsPanel}>\n              <FaCog />\n              <FaEnvelope />\n              <FaCommentAlt />\n              <FaMagic />\n            </div>\n          </AnimatedPanel>\n        </AnimatedPanel>\n      </ReactOffcanvasComponent>\n    </div>\n  );\n}\n\nexport default ThreePanels;\n","import React, { useState } from \"react\";\nimport ReactOffcanvasComponent from \"react-offcanvas-component\";\nimport \"./Basic.css\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst { Menu, DropdownMenu, CloseButton } = ReactOffcanvasComponent;\n\nconst MenuItem = Menu.Item;\n\nfunction Basic() {\n  const [visibility, setVisibility] = useState(false);\n\n  const handleClick = () => {\n    setVisibility(visibility => !visibility);\n  };\n\n  const openAnimation = {\n    x: 0,\n    transition: {\n      duration: 200\n    }\n  };\n\n  return (\n    <div>\n      <button className=\"button\" onClick={handleClick}>\n        {!visibility ? \"Basic\" : \"Close basic\"}\n      </button>\n      <ReactOffcanvasComponent\n        className=\"wrapper\"\n        open={visibility}\n        openAnimation={openAnimation}\n      >\n        <CloseButton onClick={handleClick} style={{ right: 10 }}>\n          <FaTimes />\n        </CloseButton>\n        <div className=\"logo\">ROC</div>\n        <Menu>\n          <MenuItem className=\"menu-item\">Home</MenuItem>\n          <MenuItem className=\"menu-item\">Another Menu Item</MenuItem>\n          <MenuItem hasDropdown name=\"dropdown-b\" className=\"dropdown\">\n            Dropdown\n            <DropdownMenu>\n              <MenuItem className=\"dropdown-item\">Abc</MenuItem>\n              <MenuItem className=\"dropdown-item\">Abc</MenuItem>\n              <MenuItem className=\"dropdown-item\">Abc</MenuItem>\n            </DropdownMenu>\n          </MenuItem>\n          <MenuItem className=\"menu-item\">Is n't it awesome</MenuItem>\n        </Menu>\n      </ReactOffcanvasComponent>\n    </div>\n  );\n}\n\nexport default Basic;\n","import React from \"react\";\nimport ThreePanels from \"./examples/ThreePanels/ThreePanels\";\nimport Basic from \"./examples/Basic/Basic\";\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"app\">\n    <h1 className=\"demo-heading\">React Offcanvas Component</h1>\n    <Basic />\n    <ThreePanels />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}